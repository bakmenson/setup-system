#+title: Setup System

#+property: header-args:shell :tangle-mode (identity #o555) :tangle setup-system.sh :shebang #!/bin/bash

* Table of Contents :toc:
- [[#pre-install][Pre-install]]
- [[#update][Update]]
- [[#apt][Apt]]
- [[#snap][Snap]]
- [[#github][GitHub]]
  - [[#oh-my-zsh][Oh-my-zsh]]
  - [[#alacritty][Alacritty]]
- [[#programming-languages][Programming Languages]]
  - [[#python][Python]]
  - [[#java][Java]]
  - [[#rust][Rust]]
  - [[#javascript][JavaScript]]
  - [[#sql][SQL]]
  - [[#bash][Bash]]
- [[#install-jetbrains-ide][Install JetBrains IDE]]
- [[#emacs-config][Emacs Config]]
- [[#dotfiles][Dotfiles]]
- [[#automount-hdd][Automount HDD]]
- [[#change-shell][Change Shell]]
- [[#usage][Usage]]

* Pre-install

#+begin_src shell
mkdir ~/dev
#+end_src

* Update

#+begin_src shell
sudo apt update && sudo apt dist-upgrade && sudo snap refresh
#+end_src

* Apt

#+begin_src shell
sudo apt install $(cat ~/setup-system/packages.txt)
#+end_src

* Snap

#+begin_src shell
sudo snap install emacs --classic
sudo snap install telegram-desktop
sudo snap install node --classic
sudo snap install kotlin --classic
#+end_src

* GitHub
** Oh-my-zsh

#+begin_src shell
if [ -d ~/.oh-my-zsh ]; then rm -rf ~/.oh-my-zsh; fi
git clone https://github.com/ohmyzsh/ohmyzsh ~/.oh-my-zsh
git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-history-substring-search ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
#+end_src

** Alacritty

#+begin_src shell
if [ -d ~/.alacritty ]; then rm -rf ~/.alacritty; fi
git clone https://github.com/alacritty/alacritty.git ~/.alacritty
cd ~/.alacritty
cargo build --release
sudo cp target/release/alacritty /usr/local/bin
cd ~/
#+end_src

* Programming Languages
** Python
*** Pip

#+begin_src shell
python3 -m pip install ipython
#+end_src

*** Pyenv

#+begin_src shell
if [ -d ~/.pyenv ]; then rm -rf ~/.pyenv; fi

git clone https://github.com/pyenv/pyenv .pyenv
#+end_src

*** Poetry

#+begin_src shell
curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 -
mkdir ~/.oh-my-zsh/plugins/poetry
poetry completions zsh > ~/.oh-my-zsh/plugins/poetry/_poetry
#+end_src

** Java

  #+begin_src shell
  #+end_src

** Rust

#+begin_src shell
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#+end_src

** JavaScript
*** NPM

#+begin_src shell
sudo npm install -g typescript typescript-language-server js-beautify
#+end_src

** SQL
*** PostgreSQL

#+begin_src shell
#+end_src

** Bash

#+begin_src shell
sudo npm i -g bash-language-server
#+end_src

* Install JetBrains IDE

#+begin_src shell
git clone https://github.com/bakmenson/jetbrains-downloader.git
while true; do
	printf "\n"
	python3 ~/jetbrains-downloader/downloader.py

	printf "\nDo you want install another IDE? (y/n)"
	read -s -n 1 answer
	[[ $answer == "" || $answer == "y" ]] || break
done
rm -rf jetbrains-downloader
#+end_src

* Emacs Config

#+begin_src shell
if [ -d ~/dev/emacs-config ]; then rm -rf ~/dev/emacs-config; fi
git clone https://github.com/bakmenson/emacs-config.git ~/dev/emacs-config
emacs --batch --eval "(require 'org)" --eval '(org-babel-tangle-file "~/dev/emacs-config/README.org")'
#+end_src

* Dotfiles

#+begin_src shell
if [ -d ~/dev/dotfiles ]; then rm -rf ~/dev/dotfiles; fi
git clone https://github.com/bakmenson/dotfiles.git ~/dev/dotfiles
emacs --batch --eval "(require 'org)" --eval '(org-babel-tangle-file "~/dev/dotfiles/README.org")'
#+end_src

* Automount HDD

#+begin_src shell
sudo tee -a /etc/fstab > /dev/null <<EOT
UUID=6883E43D19D297F7 /run/media/solus/hdd/      ntfs  errors=remount-ro,auto,exec,rw,user 0   0
EOT
#+end_src

* Change Shell

#+begin_src shell
chsh -s /bin/zsh
#+end_src

* Usage

#+begin_src shell :tangle no 
git clone https://github.com/bakmenson/setup-system
bash setup-system/install.sh
#+end_src
